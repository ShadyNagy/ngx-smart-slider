import { ElementRef } from '@angular/core';
import { SmartSliderItem } from '../models/smart-slider-item';
import { ISmartSliderOptionsInternal } from '../models/smart-slider-options';
export declare class SmartSliderService {
    itemsToShow: SmartSliderItem[];
    itemIndex: number;
    width: number;
    height: number;
    margin: number;
    horizontalMargin: number;
    verticalMargin: number;
    isLoop: boolean;
    private limit;
    private sliderMoving;
    private items;
    constructor();
    get maxIndex(): number;
    get itemWidth(): number;
    get itemHeight(): number;
    static getNodeByClassNameInsideElementRef(element: ElementRef, className: string): any;
    static getNodeWidthByClassNameInsideElementRef(element: ElementRef, className: string): any;
    static getNodeHeightByClassNameInsideElementRef(element: ElementRef, className: string): any;
    static getNodeByIdInsideElementRef(element: ElementRef, id: string): HTMLElement;
    static getNodeWidthByIdInsideElementRef(element: ElementRef, id: string): number;
    static getNodeHeightByIdInsideElementRef(element: ElementRef, id: string): number;
    static getNodeByClassNameInsideNativeElement(element: any, className: string): any;
    static getNodeWidthByClassNameInsideNativeElement(element: any, className: string): any;
    static getNodeHeightByClassNameInsideNativeElement(element: any, className: string): any;
    static getNodeByIdInsideNativeElement(element: any, id: string): HTMLElement;
    static getNodeWidthByIdInsideNativeElement(element: any, id: string): number;
    static getNodeHeightByIdInsideNativeElement(element: any, id: string): number;
    static randomHexWord(): string;
    getId(item: SmartSliderItem, smartSliderOptions: ISmartSliderOptionsInternal): any;
    getText(item: SmartSliderItem, smartSliderOptions: ISmartSliderOptionsInternal): any;
    getImage(item: SmartSliderItem, smartSliderOptions: ISmartSliderOptionsInternal): any;
    getAlt(item: SmartSliderItem, smartSliderOptions: ISmartSliderOptionsInternal): any;
    setLimit(count: number): void;
    getLimit(): number;
    setHorizontalMargin(margin: number): void;
    setVerticalMargin(margin: number): void;
    setWidth(width: number): void;
    setHeight(height: number): void;
    setItems(items: Array<SmartSliderItem>, limit?: number): void;
    moveNext(): void;
    movePrevious(): void;
    sliderDone(): void;
    private updateItemsToShow;
    private updateItemIndexNext;
    private updateItemIndexPrevious;
}
