import { EventEmitter } from '@angular/core';
import { DomSanitizer, SafeStyle } from '@angular/platform-browser';
import { SmartSliderItem } from '../models/smart-slider-item';
import * as ɵngcc0 from '@angular/core';
export declare class SmartSliderComponent {
    private sanitizer;
    _vertical: boolean;
    set vertical(value: boolean);
    _items: SmartSliderItem[];
    set items(value: Array<SmartSliderItem>);
    _showPrevious: boolean;
    set showPrevious(value: boolean);
    _showNext: boolean;
    set showNext(value: boolean);
    _showDots: boolean;
    set showDots(value: boolean);
    _autoplay: boolean;
    set autoplay(value: boolean);
    _loop: boolean;
    set loop(value: boolean);
    _pauseOnHover: boolean;
    set pauseOnHover(value: boolean);
    _itemMargin: string;
    set itemMargin(value: number);
    _itemPadding: string;
    set itemPadding(value: number);
    _textPosition: string;
    set textPosition(value: 'centered-top' | 'centered-bottom' | 'centered' | 'bottom-right ' | 'top-right' | 'top-left' | 'bottom-left');
    _textColor: string;
    set textColor(value: string);
    _cellLimit: number;
    set cellLimit(value: number);
    _height: string;
    set height(value: number);
    _width: string;
    set width(value: number);
    _autoplayInterval: number;
    set autoplayInterval(value: number);
    _transitionDuration: number;
    set transitionDuration(value: number);
    _class: string;
    set class(value: string);
    select: EventEmitter<any>;
    get hostStyles(): SafeStyle;
    get hostClasses(): string;
    constructor(sanitizer: DomSanitizer);
    onSelect(event: SmartSliderItem): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<SmartSliderComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<SmartSliderComponent, "smart-slider", never, { "vertical": "vertical"; "items": "items"; "showPrevious": "showPrevious"; "showNext": "showNext"; "showDots": "showDots"; "autoplay": "autoplay"; "loop": "loop"; "pauseOnHover": "pauseOnHover"; "itemMargin": "itemMargin"; "itemPadding": "itemPadding"; "textPosition": "textPosition"; "textColor": "textColor"; "cellLimit": "cellLimit"; "height": "height"; "width": "width"; "autoplayInterval": "autoplayInterval"; "transitionDuration": "transitionDuration"; "class": "class"; }, { "select": "select"; }, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic21hcnQtc2xpZGVyLmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJzbWFydC1zbGlkZXIuY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEV2ZW50RW1pdHRlciB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBEb21TYW5pdGl6ZXIsIFNhZmVTdHlsZSB9IGZyb20gJ0Bhbmd1bGFyL3BsYXRmb3JtLWJyb3dzZXInO1xyXG5pbXBvcnQgeyBTbWFydFNsaWRlckl0ZW0gfSBmcm9tICcuLi9tb2RlbHMvc21hcnQtc2xpZGVyLWl0ZW0nO1xyXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBTbWFydFNsaWRlckNvbXBvbmVudCB7XHJcbiAgICBwcml2YXRlIHNhbml0aXplcjtcclxuICAgIF92ZXJ0aWNhbDogYm9vbGVhbjtcclxuICAgIHNldCB2ZXJ0aWNhbCh2YWx1ZTogYm9vbGVhbik7XHJcbiAgICBfaXRlbXM6IFNtYXJ0U2xpZGVySXRlbVtdO1xyXG4gICAgc2V0IGl0ZW1zKHZhbHVlOiBBcnJheTxTbWFydFNsaWRlckl0ZW0+KTtcclxuICAgIF9zaG93UHJldmlvdXM6IGJvb2xlYW47XHJcbiAgICBzZXQgc2hvd1ByZXZpb3VzKHZhbHVlOiBib29sZWFuKTtcclxuICAgIF9zaG93TmV4dDogYm9vbGVhbjtcclxuICAgIHNldCBzaG93TmV4dCh2YWx1ZTogYm9vbGVhbik7XHJcbiAgICBfc2hvd0RvdHM6IGJvb2xlYW47XHJcbiAgICBzZXQgc2hvd0RvdHModmFsdWU6IGJvb2xlYW4pO1xyXG4gICAgX2F1dG9wbGF5OiBib29sZWFuO1xyXG4gICAgc2V0IGF1dG9wbGF5KHZhbHVlOiBib29sZWFuKTtcclxuICAgIF9sb29wOiBib29sZWFuO1xyXG4gICAgc2V0IGxvb3AodmFsdWU6IGJvb2xlYW4pO1xyXG4gICAgX3BhdXNlT25Ib3ZlcjogYm9vbGVhbjtcclxuICAgIHNldCBwYXVzZU9uSG92ZXIodmFsdWU6IGJvb2xlYW4pO1xyXG4gICAgX2l0ZW1NYXJnaW46IHN0cmluZztcclxuICAgIHNldCBpdGVtTWFyZ2luKHZhbHVlOiBudW1iZXIpO1xyXG4gICAgX2l0ZW1QYWRkaW5nOiBzdHJpbmc7XHJcbiAgICBzZXQgaXRlbVBhZGRpbmcodmFsdWU6IG51bWJlcik7XHJcbiAgICBfdGV4dFBvc2l0aW9uOiBzdHJpbmc7XHJcbiAgICBzZXQgdGV4dFBvc2l0aW9uKHZhbHVlOiAnY2VudGVyZWQtdG9wJyB8ICdjZW50ZXJlZC1ib3R0b20nIHwgJ2NlbnRlcmVkJyB8ICdib3R0b20tcmlnaHQgJyB8ICd0b3AtcmlnaHQnIHwgJ3RvcC1sZWZ0JyB8ICdib3R0b20tbGVmdCcpO1xyXG4gICAgX3RleHRDb2xvcjogc3RyaW5nO1xyXG4gICAgc2V0IHRleHRDb2xvcih2YWx1ZTogc3RyaW5nKTtcclxuICAgIF9jZWxsTGltaXQ6IG51bWJlcjtcclxuICAgIHNldCBjZWxsTGltaXQodmFsdWU6IG51bWJlcik7XHJcbiAgICBfaGVpZ2h0OiBzdHJpbmc7XHJcbiAgICBzZXQgaGVpZ2h0KHZhbHVlOiBudW1iZXIpO1xyXG4gICAgX3dpZHRoOiBzdHJpbmc7XHJcbiAgICBzZXQgd2lkdGgodmFsdWU6IG51bWJlcik7XHJcbiAgICBfYXV0b3BsYXlJbnRlcnZhbDogbnVtYmVyO1xyXG4gICAgc2V0IGF1dG9wbGF5SW50ZXJ2YWwodmFsdWU6IG51bWJlcik7XHJcbiAgICBfdHJhbnNpdGlvbkR1cmF0aW9uOiBudW1iZXI7XHJcbiAgICBzZXQgdHJhbnNpdGlvbkR1cmF0aW9uKHZhbHVlOiBudW1iZXIpO1xyXG4gICAgX2NsYXNzOiBzdHJpbmc7XHJcbiAgICBzZXQgY2xhc3ModmFsdWU6IHN0cmluZyk7XHJcbiAgICBzZWxlY3Q6IEV2ZW50RW1pdHRlcjxhbnk+O1xyXG4gICAgZ2V0IGhvc3RTdHlsZXMoKTogU2FmZVN0eWxlO1xyXG4gICAgZ2V0IGhvc3RDbGFzc2VzKCk6IHN0cmluZztcclxuICAgIGNvbnN0cnVjdG9yKHNhbml0aXplcjogRG9tU2FuaXRpemVyKTtcclxuICAgIG9uU2VsZWN0KGV2ZW50OiBTbWFydFNsaWRlckl0ZW0pOiB2b2lkO1xyXG59XHJcbiJdfQ==